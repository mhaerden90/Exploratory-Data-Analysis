or Symbol = 'CH0002488945'
or Symbol = 'CH0007292359'
or Symbol = 'DE0008469602'
or Symbol = 'FR0003999499'
or Symbol = 'NL0000249100'
or Symbol = 'CH0001755534'
or Symbol = 'CH0001756938'
or Symbol = 'CH0001757456'
or Symbol = 'CH0001757787' or
]]")
NamesApprovedConstituents <- lapply(ap
approvedIndices <- getNodeSet(data, "//INDICE[./Codifications/Codification[Symbol = 'CH0001756805'or Symbol = 'CH0001756805' or Symbol = 'BE0389549941' or Symbol = 'CH0001693230'
or Symbol = 'CH0001699906'
or Symbol = 'CH0001700019'
or Symbol = 'CH0001700183'
or Symbol = 'CH0001700324'
or Symbol = 'CH0001700423'
or Symbol = 'CH0001700472'
or Symbol = 'CH0001805875'
or Symbol = 'CH0001805925'
or Symbol = 'CH0001805982'
or Symbol = 'CH0001806022'
or Symbol = 'CH0001806154'
or Symbol = 'CH0002488945'
or Symbol = 'CH0007292359'
or Symbol = 'DE0008469602'
or Symbol = 'FR0003999499'
or Symbol = 'NL0000249100'
or Symbol = 'CH0001755534'
or Symbol = 'CH0001756938'
or Symbol = 'CH0001757456'
or Symbol = 'CH0001757787' or
]]")
approvedIndices <- getNodeSet(data, "//INDICE[./Codifications/Codification[Symbol = 'CH0001756805'or Symbol = 'CH0001756805' or Symbol = 'BE0389549941' or Symbol = 'CH0001693230'
or Symbol = 'CH0001699906'
or Symbol = 'CH0001700019'
or Symbol = 'CH0001700183'
or Symbol = 'CH0001700324'
or Symbol = 'CH0001700423'
or Symbol = 'CH0001700472'
or Symbol = 'CH0001805875'
or Symbol = 'CH0001805925'
or Symbol = 'CH0001805982'
or Symbol = 'CH0001806022'
or Symbol = 'CH0001806154'
or Symbol = 'CH0002488945'
or Symbol = 'CH0007292359'
or Symbol = 'DE0008469602'
or Symbol = 'FR0003999499'
or Symbol = 'NL0000249100'
or Symbol = 'CH0001755534'
or Symbol = 'CH0001756938'
or Symbol = 'CH0001757456'
or Symbol = 'CH0001757787'
]]")
length(approvedIndices)
approvedIndices <- getNodeSet(data, "//INDICE[./Codifications/Codification[Symbol = 'CH0001756805' or Symbol = 'BE0389549941' or Symbol = 'CH0001693230'
or Symbol = 'CH0001699906'
or Symbol = 'CH0001700019'
or Symbol = 'CH0001700183'
or Symbol = 'CH0001700324'
or Symbol = 'CH0001700423'
or Symbol = 'CH0001700472'
or Symbol = 'CH0001805875'
or Symbol = 'CH0001805925'
or Symbol = 'CH0001805982'
or Symbol = 'CH0001806022'
or Symbol = 'CH0001806154'
or Symbol = 'CH0002488945'
or Symbol = 'CH0007292359'
or Symbol = 'DE0008469602'
or Symbol = 'FR0003999499'
or Symbol = 'NL0000249100'
or Symbol = 'CH0001755534'
or Symbol = 'CH0001756938'
or Symbol = 'CH0001757456'
or Symbol = 'CH0001757787'
]]")
length(approvedIndices)
approvedIndices <- getNodeSet(data, "//INDICE[./Codifications/Codification[Symbol='CH0001756805'or Symbol = 'CH0001756805' or Symbol = 'BE0389549941' or Symbol = 'CH0001693230'
or Symbol = 'CH0001699906'
or Symbol = 'CH0001700019'
or Symbol = 'CH0001700183'
or Symbol = 'CH0001700324'
or Symbol = 'CH0001700423'
or Symbol = 'CH0001700472'
or Symbol = 'CH0001805875'
or Symbol = 'CH0001805925'
or Symbol = 'CH0001805982'
or Symbol = 'CH0001806022'
or Symbol = 'CH0001806154'
or Symbol = 'CH0002488945'
or Symbol = 'CH0007292359'
or Symbol = 'DE0008469602'
or Symbol = 'FR0003999499'
or Symbol = 'NL0000249100'
or Symbol = 'CH0001755534'
or Symbol = 'CH0001756938'
or Symbol = 'CH0001757456'
or Symbol = 'CH0001757787'
]]")
length(approvedIndices)
approvedIndices <- getNodeSet(data, "//INDICE[./Codifications/Codification[Symbol='CH0001756805'or Symbol = 'CH0001756805' or Symbol = 'BE0389549941' or Symbol = 'CH0001693230'
or Symbol = 'CH0001699906'
or Symbol = 'CH0001700019'
or Symbol = 'CH0001700183'
or Symbol = 'CH0001700324'
or Symbol = 'CH0001700423'
or Symbol = 'CH0001700472'
or Symbol = 'CH0001805875'
or Symbol = 'CH0001805925'
or Symbol = 'CH0001805982'
or Symbol = 'CH0001806022'
or Symbol = 'CH0001806154'
or Symbol = 'CH0002488945'
or Symbol = 'CH0007292359'
or Symbol = 'DE0008469602'
or Symbol = 'FR0003999499'
or Symbol = 'NL0000249100'
or Symbol = 'CH0001755534'
or Symbol = 'CH0001756938'
or Symbol = 'CH0001757456'
]]")
length(approvedIndices)
approvedIndices <- getNodeSet(data, "//INDICE[./Codifications/Codification[Symbol='CH0001756805'or Symbol = 'CH0001756805' or Symbol = 'BE0389549941' or Symbol = 'CH0001693230'
or Symbol = 'CH0001699906'
or Symbol = 'CH0001700019'
or Symbol = 'CH0001700183'
or Symbol = 'CH0001700324'
or Symbol = 'CH0001700423'
or Symbol = 'CH0001700472'
or Symbol = 'CH0001805875'
or Symbol = 'CH0001805925'
or Symbol = 'CH0001805982'
or Symbol = 'CH0001806022'
or Symbol = 'CH0001806154'
or Symbol = 'CH0002488945'
or Symbol = 'CH0007292359'
or Symbol = 'DE0008469602'
or Symbol = 'FR0003999499'
or Symbol = 'NL0000249100'
or Symbol = 'CH0001755534'
or Symbol = 'CH0001756938'
or Symbol = 'CH0001757456'
or Symbol = 'CH0001757787'
]]")
length(approvedIndices)
approvedIndices <- getNodeSet(data, "//INDICE[./Codifications/Codification[
Symbol=  'CH0001756805'
or Symbol = 'CH0001756805'
or Symbol = 'BE0389549941'
or Symbol = 'CH0001693230'
or Symbol = 'CH0001699906'
or Symbol = 'CH0001700019'
or Symbol = 'CH0001700183'
or Symbol = 'CH0001700324'
or Symbol = 'CH0001700423'
or Symbol = 'CH0001700472'
or Symbol = 'CH0001805875'
or Symbol = 'CH0001805925'
or Symbol = 'CH0001805982'
or Symbol = 'CH0001806022'
or Symbol = 'CH0001806154'
or Symbol = 'CH0002488945'
or Symbol = 'CH0007292359'
or Symbol = 'DE0008469602'
or Symbol = 'FR0003999499'
or Symbol = 'NL0000249100'
or Symbol = 'CH0001755534'
or Symbol = 'CH0001756938'
or Symbol = 'CH0001757456'
or Symbol = 'CH0001757787'
]]")
length(approvedIndices)
approvedIndices <- getNodeSet(data, "//INDICE[./Codifications/Codification[
Symbol=  'CH0001756805'
or Symbol = 'CH0001756805'
or Symbol = 'BE0389549941'
or Symbol = 'CH0001693230'
or Symbol = 'CH0001699906'
or Symbol = 'CH0001700019'
or Symbol = 'CH0001700183'
or Symbol = 'CH0001700324'
or Symbol = 'CH0001700423'
or Symbol = 'CH0001700472'
or Symbol = 'CH0001805875'
or Symbol = 'CH0001805925'
or Symbol = 'CH0001805982'
or Symbol = 'CH0001806022'
or Symbol = 'CH0001806154'
or Symbol = 'CH0002488945'
or Symbol = 'CH0007292359'
or Symbol = 'DE0008469602'
or Symbol = 'FR0003999499'
or Symbol = 'NL0000249100'
or Symbol = 'CH0001755534'
or Symbol = 'CH0001756938'
or Symbol = 'CH0001757456'
or Symbol = 'CH0001757787'
]]")
length(approvedIndices)
approvedIndices[1]
approvedIndices <- getNodeSet(data, "//INDICE[./Codifications/Codification[
Symbol=  'CH0001756805'
or Symbol = 'CH0001756805'
or Symbol = 'BE0389549941'
or Symbol = 'CH0001693230'
or Symbol = 'CH0001699906'
or Symbol = 'CH0001700019'
or Symbol = 'CH0001700183'
or Symbol = 'CH0001700324'
or Symbol = 'CH0001700423'
or Symbol = 'CH0001700472'
or Symbol = 'CH0001805875'
or Symbol = 'CH0001805925'
or Symbol = 'CH0001805982'
or Symbol = 'CH0001806022'
or Symbol = 'CH0001806154'
or Symbol = 'CH0002488945'
or Symbol = 'CH0007292359'
or Symbol = 'DE0008469602'
or Symbol = 'FR0003999499'
or Symbol = 'NL0000249100'
or Symbol = 'CH0001755534'
or Symbol = 'CH0001756938'
or Symbol = 'CH0001757456'
or Symbol = 'CH0001757787'
]]")
NamesApprovedConstituents <- lapply(approvedIndices, function(i) {
xpathApply(i, ".//CONSITUENTS/CONSTITUENT/NAME", xmlValue)
})
NamesApprovedConstituents <- unlist(NamesApprovedConstituents)
NamesApprovedConstituents <- unique(NamesApprovedConstituents)
approvedIsins<- lapply(allIsinsNodeSet, function (x) {
if (xpathApply(x, "./../../../NAME", xmlValue) %in% NamesApprovedConstituents) {
xpathApply(x, "./../Symbol", xmlValue)
}
})
approvedIsins <- unlist(approvedIsins)
length(approvedIsins)
write.csv(approvedIsins, file="isins.csv")
swirl()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
hellp(package= lubridate)
help(package= lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday()
wday(this_day)
wday(this_day, label=TRUE)
now()
info()
this_moment <- now()
this moment
this_moment
hour(this_moment)
ymd("1989-08-17")
my_date <-ymd("1989-08-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
mdy(March 12, 1975)
mdy(25081985)
dmy(25081985)
dmy("192012")
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
athis_moment
this_moment
this_moment <- update(this_moment, hours=18, minutes=58)
this_moment
nyc <- ow("America/New_York")
nyc <- now("America/New_York")
nyc
nyc+ days(2)
depart <- nyc+ days(2)
depart
depart <- update(nyc, hours=17, minutes = 34)
depart <- update(depart, hours=17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz= "Singapore")
last_time
?interval
interval(last_time, arrive)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(swirl)
siwrl()
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
summary(ppm)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h = 12)
hist(ppm, col="green")
rug(ppm)
low
hight
high
hist(ppm, col="green", breaks=100)
rug(pp,)
rug(ppm)
hist(ppm, col="green")
abline(v=12 lwd=2
abline(v=12 lwd=2)
abline(v=12, lwd=2)
abline(v=median(ppm), col= "magenta" ,lwd=4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties in Each REgion")
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(ppm ~ region, data=pollution, col="red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region = "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region=="west"), col="green")
hist(subset(pollution$pm25, region=="west"), col="green")
hist(subset(pollution, region=="west"), col="green")
hist(subset(pollution, region=="west")$pm25, col="green")
with(pollution, plot(latitude~pm25))
with(pollution, plot(latitude, pm25))
with(pollution, plot(latitude~pm25))
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, pollution$pm25, col=pollution$region)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow= c(1,2), mar= c(5,4,2,1))
east <- subset(pollution, region == "west")
east <- subset(pollution, region == "east")
west <- subset(pollution, region == "east")
east <- subset(pollution, region == "east")
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
#Peer graded assignment Explanatory data analysis - plot 1#
#Reading in the data and subsetting dates#
data <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
#replacing ? by NA
replace(data, data=="?", NA)
#Subsetting data to 2007-02-01 and 2007-02-02
subset <- c("1/2/2007", "2/2/2007")
data <- data[data$Date %in% subset,]
#transform data and time values
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
data$Time <- format(strptime(data$Time, format="%H:%M:%S"), "%H:%M:%S")
data$datetime <- as.POSIXct(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
#Set to English
Sys.setlocale("LC_TIME", "C")
#Create plot#
png(filename="plot1.png", width = 480, height = 480)
hist(na.omit(as.numeric(as.character((data$Global_active_power)))), col="red", main="Global Active Power", xlab = "Global Active Power(kilowatts)", ylab="Frequency")
dev.off()
getwd()
setwd("~/datasciencecoursera/Explanatory Data Analysis")
#Peer graded assignment Explanatory data analysis - plot 1#
#Reading in the data and subsetting dates#
data <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
#replacing ? by NA
replace(data, data=="?", NA)
#Subsetting data to 2007-02-01 and 2007-02-02
subset <- c("1/2/2007", "2/2/2007")
data <- data[data$Date %in% subset,]
#transform data and time values
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
data$Time <- format(strptime(data$Time, format="%H:%M:%S"), "%H:%M:%S")
data$datetime <- as.POSIXct(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
#Set to English
Sys.setlocale("LC_TIME", "C")
#Create plot#
png(filename="plot1.png", width = 480, height = 480)
hist(na.omit(as.numeric(as.character((data$Global_active_power)))), col="red", main="Global Active Power", xlab = "Global Active Power(kilowatts)", ylab="Frequency")
dev.off()
#Peer graded assignment Explanatory data analysis#
#Reading in the data and subsetting dates#
data <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
#replacing ? by NA
replace(data, data=="?", NA)
#Subsetting data to 2007-02-01 and 2007-02-02
subset <- c("1/2/2007", "2/2/2007")
data <- data[data$Date %in% subset,]
#transform data and time values
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
data$Time <- format(strptime(data$Time, format="%H:%M:%S"), "%H:%M:%S")
data$datetime <- as.POSIXct(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
#Set to English
Sys.setlocale("LC_TIME", "C")
#Plot 2#
png(filename="plot2.png", width = 480, height = 480)
plot(na.omit(as.numeric(as.character((data$Global_active_power)))) ~ data$datetime, type="l", xlab="", ylab="Global Active Power(kilowatts")
dev.off()
#Peer graded assignment Explanatory data analysis#
#Reading in the data and subsetting dates#
data <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
#replacing ? by NA
replace(data, data=="?", NA)
#Subsetting data to 2007-02-01 and 2007-02-02
subset <- c("1/2/2007", "2/2/2007")
data <- data[data$Date %in% subset,]
#transform data and time values
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
data$Time <- format(strptime(data$Time, format="%H:%M:%S"), "%H:%M:%S")
data$datetime <- as.POSIXct(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
#Set to English
Sys.setlocale("LC_TIME", "C")
#Plot 3#
png(filename="plot3.png", width = 480, height = 480)
plot(na.omit(as.numeric(as.character((data$Sub_metering_1)))) ~ data$datetime, type="n", ylab="Energy sub metering", xlab="")
lines(na.omit(as.numeric(as.character((data$Sub_metering_1))))~ data$datetime, col="black")
lines(na.omit(as.numeric(as.character((data$Sub_metering_2)))) ~ data$datetime, col="red")
lines(na.omit(as.numeric(as.character((data$Sub_metering_3)))) ~ data$datetime, col="blue")
legend("topright", lty = c(1, 1,1), lwd= c(1, 1,1), col= c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
#Peer graded assignment Explanatory data analysis - Plot 4#
#Reading in the data and subsetting dates#
data <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
#replacing ? by NA
replace(data, data=="?", NA)
#Subsetting data to 2007-02-01 and 2007-02-02
subset <- c("1/2/2007", "2/2/2007")
data <- data[data$Date %in% subset,]
#transform data and time values
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
data$Time <- format(strptime(data$Time, format="%H:%M:%S"), "%H:%M:%S")
data$datetime <- as.POSIXct(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
#Set to English
Sys.setlocale("LC_TIME", "C")
#Create plot#
png(filename="plot4.png", width = 480, height = 480)
par(mfrow=c(2,2))
plot(na.omit(as.numeric(as.character((data$Global_active_power)))) ~ data$datetime, type="l", xlab="", ylab="Global Active Power(kilowatts")
plot(na.omit(as.numeric(as.character((data$Voltage)))) ~ data$datetime, type="l", xlab="datetime", ylab="Voltage")
windows()
plot(na.omit(as.numeric(as.character((data$Sub_metering_1)))) ~ data$datetime, type="n", ylab="Energy sub metering", xlab="")
lines(na.omit(as.numeric(as.character((data$Sub_metering_1))))~ data$datetime, col="black")
lines(na.omit(as.numeric(as.character((data$Sub_metering_2)))) ~ data$datetime, col="red")
lines(na.omit(as.numeric(as.character((data$Sub_metering_3)))) ~ data$datetime, col="blue")
legend("topright", lty = c(1, 1,1), lwd= c(1, 1,1), col= c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty ="n")
plot(na.omit(as.numeric(as.character((data$Global_reactive_power)))) ~ data$datetime, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
dev.off()
#Peer graded assignment Explanatory data analysis - Plot 4#
#Reading in the data and subsetting dates#
data <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
#replacing ? by NA
replace(data, data=="?", NA)
#Subsetting data to 2007-02-01 and 2007-02-02
subset <- c("1/2/2007", "2/2/2007")
data <- data[data$Date %in% subset,]
#transform data and time values
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
data$Time <- format(strptime(data$Time, format="%H:%M:%S"), "%H:%M:%S")
data$datetime <- as.POSIXct(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
#Set to English
Sys.setlocale("LC_TIME", "C")
#Create plot#
png(filename="plot4.png", width = 480, height = 480)
par(mfrow=c(2,2))
plot(na.omit(as.numeric(as.character((data$Global_active_power)))) ~ data$datetime, type="l", xlab="", ylab="Global Active Power(kilowatts")
plot(na.omit(as.numeric(as.character((data$Voltage)))) ~ data$datetime, type="l", xlab="datetime", ylab="Voltage")
plot(na.omit(as.numeric(as.character((data$Sub_metering_1)))) ~ data$datetime, type="n", ylab="Energy sub metering", xlab="")
lines(na.omit(as.numeric(as.character((data$Sub_metering_1))))~ data$datetime, col="black")
lines(na.omit(as.numeric(as.character((data$Sub_metering_2)))) ~ data$datetime, col="red")
lines(na.omit(as.numeric(as.character((data$Sub_metering_3)))) ~ data$datetime, col="blue")
legend("topright", lty = c(1, 1,1), lwd= c(1, 1,1), col= c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty ="n")
plot(na.omit(as.numeric(as.character((data$Global_reactive_power)))) ~ data$datetime, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
#Peer graded assignment Explanatory data analysis - plot 1#
#Reading in the data and subsetting dates#
data <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
#replacing ? by NA
replace(data, data=="?", NA)
#Subsetting data to 2007-02-01 and 2007-02-02
subset <- c("1/2/2007", "2/2/2007")
data <- data[data$Date %in% subset,]
#transform data and time values
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
data$Time <- format(strptime(data$Time, format="%H:%M:%S"), "%H:%M:%S")
data$datetime <- as.POSIXct(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
#Set to English
Sys.setlocale("LC_TIME", "C")
#Create plot#
png(filename="plot1.png", width = 480, height = 480)
hist(na.omit(as.numeric(as.character((data$Global_active_power)))), col="red", main="Global Active Power", xlab = "Global Active Power(kilowatts)", ylab="Frequency")
dev.off()
